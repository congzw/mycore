using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace LixbApi
{
    [Route("Api/File")]
    [ApiController]
    public class FileController : ControllerBase
    {
        private readonly IHostingEnvironment _hostingEnvironment;

        public FileController(IHostingEnvironment hostingEnvironment)
        {
            _hostingEnvironment = hostingEnvironment;
        }
        [HttpPost("UploadBase64")]
        public async Task<MessageResult> UploadBase64(Base64File base64File)
        {
            var url = await GetFromBase64File(base64File);
            return MessageResult.CreateSuccess("成功",url);
        }

        [HttpGet("test")]
        public string Test()
        {
            return DateTime.Now.ToString();
        }

        [HttpGet("testFile")]
        public async Task<string> TestFile()
        {
            var base64File = new Base64File()
            {
                Id = "123",
                Type = "jpg",
                FileName = "test.jpg",
                Base64 = ""
            };
            var url = await GetFromBase64File(base64File);
            return url;
        }

        public async Task<string> GetFromBase64File(Base64File base64File)
        {
            //适配前端和后端转64编码的不一致
            var fileData = base64File.Base64;
            var match = Regex.Match(base64File.Base64, string.Format("data:image/{0};base64,([\\w\\W]*)$", base64File.Type));
            if (match.Success)
            {
                fileData = match.Groups[1].Value;
            }
            var fileBytes = Convert.FromBase64String(fileData);
            var folderPath = "upload";
            return await SavePic(fileBytes, folderPath, base64File.FileName, null);

        }

        private async Task<string> SavePic(Byte[] bytes, string folderPath, string fileName, string typeDesc)
        {
            var rootPath = _hostingEnvironment.WebRootPath;
            var fileType = Path.GetExtension(fileName);
            var filePath = Path.Combine(rootPath, folderPath);
            if (!Directory.Exists(filePath))
            {
                Directory.CreateDirectory(filePath);
            }

            return await Task.Run(() =>
            {
                var path = Path.Combine(filePath, fileName);
                System.IO.File.WriteAllBytes(path, bytes);
                var fileUrl = Path.Combine(folderPath, fileName);
                return fileUrl;
            });
        }
    }
}
